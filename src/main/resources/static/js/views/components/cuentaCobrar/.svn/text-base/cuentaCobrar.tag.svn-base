<cuenta-cobrar>
    <!-- Titulos -->
    <div  class="row titulo-encabezado"  >
        <div  class="col-xs-8 col-sm-8 col-md-8 col-lg-8">
            <h1 ><i class="fa fa-calculator"></i>&nbsp {$.i18n.prop("cuentaCobrar.titulo")}  </h1>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 text-right"></div>
    </div>
<!-- Listado de abonos  -->
<div classs="contenedor-listar container" id="container"  show={mostrarListadoAbonos}   >
        <div class="row">
            <div class="col-sx-12  col-lg-12  col-md-12 col-sm-12 " style="width:98.50%;">
                <div class="box box-solid box-primary">
                    <div class="box-header with-border">
                       <h1 class="box-title" ><i class="fa fa-calculator"></i>&nbsp {$.i18n.prop("abono.detalle")}{cuentaCobrar.id}  {$.i18n.prop("cuentaCobrar.total")}:{cuentaCobrar.total}  {$.i18n.prop("cuentaCobrar.totalSaldo")}: {cuentaCobrar.totalSaldo} </h1>
                       
                    </div>

                    <div class="box-body">
                        <div class="planel-body" >
                            <div class="row" >
                                <div class="col-sx-12  col-lg-12  col-md-12 col-sm-12 " style="width:98.50%;">
                                    <table id="tableListaAbonos" class="display table responsive table-hover nowrap table-condensed tableListaAbonos"   cellspacing="0" width="100%">
                                        <thead>
                                            <tr>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.id")}           </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.fechaPago")}     </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.transferencia")} </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.recibo")}        </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.total")}         </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.estado")}        </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.created_at")}    </th>
                                                <th class = "fondoEncabezado" >{$.i18n.prop("abono.updated_at")}    </th>
                                                <th class = "fondoEncabezado">{$.i18n.prop("listado.acciones")}        </th>
                                            </tr>
                                        </thead>
                                        <tfoot style="display: table-header-group;">
                                            <tr>
                                                <th >{$.i18n.prop("abono.id")}            </th>
                                                <th >{$.i18n.prop("abono.fechaPago")}     </th>
                                                <th >{$.i18n.prop("abono.transferencia")} </th>
                                                <th >{$.i18n.prop("abono.recibo")}        </th>
                                                <th >{$.i18n.prop("abono.total")}         </th>
                                                <th >{$.i18n.prop("abono.estado")}        </th>
                                                <th >{$.i18n.prop("abono.created_at")}    </th>
                                                <th >{$.i18n.prop("abono.updated_at")}    </th>
                                                <th >                 </th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                     <h2 class="pull-right"> {$.i18n.prop("cuentaCobrar.totalAbono")}: {totalAbonos} </h2>
                                </div>    
                            </div>
                        </div>    
                        <div class="box-footer">
                            <button onclick ={__regresarAlListado}  type="button" class="btn-dark-gray btn-back pull-left"  id= "btnCancelarEmpresa" name = "btnCancelarEmpresa">
                                {$.i18n.prop("btn.volver")}
                            </button>
                  
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>
<!-- Fin del Listado de abonos-->

<!-- Formulario del Abono-->
<div show ={mostrarCrearAbono} >
    <div class="row center ">
        <div class="col-md-12 col-lg-12 col-sx-12 col-sm-1">
            <div class="box box-solid box-primary">
                <div class="box-header with-border">
                    <h1 class="box-title" show={abono.id == 0}><i class="fa fa-calculator"></i>&nbsp {$.i18n.prop("abono.detalle.agregar")} {cuentaCobrar.id}  {$.i18n.prop("cuentaCobrar.total")}:{cuentaCobrar.total}  {$.i18n.prop("cuentaCobrar.totalSaldo")}:{cuentaCobrar.totalSaldo} </h1>
                    <h1 class="box-title" show={abono.id > 0}><i class="fa fa-calculator"></i>&nbsp {$.i18n.prop("abono.detalle.id")} {abono.id} {$.i18n.prop("abono.detalle.cuenta")} {cuentaCobrar.id} {$.i18n.prop("cuentaCobrar.total")}:{cuentaCobrar.total} {$.i18n.prop("cuentaCobrar.totalSaldo")}:{cuentaCobrar.totalSaldo}</h1>
                </div>
                <div class="box-body">
                    <form id = "formularioAbono" name ="formularioAbono " class="advanced-search-form">
                        <input type="hidden" name="id" id="id" value="{abono.id}">
                        <input type="hidden" name="cuentaCobrar" id="cuentaCobrar" value="{abono.cuentaCobrar.id}">
                        <input type="hidden" name="idCuentaCobrar" id="idCuentaCobrar" value="{cuentaCobrar.id}">
                        
                        
                        <div class="row">
                            <div class="col-md-12 col-sx-12 col-sm-12 col-lg-12 left">
                                <label class="campos-requeridos-label"  show={abono.id==0}>{$.i18n.prop("mensaje.campos.obligatorios")}</label>
                                
                            </div>
                            <div class="col-md-6 col-sx-6 col-sm-6 col-lg-6"></div>
                        </div>
                      
                        <div class="row">
                            <div class="col-md-6 col-sx-6 col-sm-6 col-lg-6">
                                <label class="knob-label">{$.i18n.prop("cuentaCobrar.cliente")} </label>
                                <input type="text" class="form-control" value="{cuentaCobrar.cliente.nombreCompleto}" readonly={cuentaCobrar.id > 0} >                        
                            </div>
                            <div class="col-md-6 col-sx-6 col-sm-6 col-lg-6">
                                <label class="knob-label">{$.i18n.prop("cuentaCobrar.vendedor")} </label>
                                <input type="text" class="form-control"   value="{cuentaCobrar.vendedor.nombreCompleto}" readonly={cuentaCobrar.id > 0}>                        
                            </div>
                           
                        </div>
                        <div class="row">
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.fechaPago")} <span class="requeridoDato">*</span></label>
                                 <div  class="form-group input-group date" data-provide="datepicker"   data-date-format="dd/mm/yyyy">
                                    <input type="text" class="form-control fechaPago" id="fechaPago" name="fechaPago"  value="{abono.fechaPago}"  readonly={abono.id > 0}>
                                    <div class="input-group-addon">
                                        <span class="glyphicon glyphicon-th"></span>
                                    </div>
                                </div>
                            </div>
                        
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.recibo")} <span class="requeridoDato">*</span></label>
                                <input type="text" class="form-control recibo"  id="recibo" name="recibo"  value="{abono.recibo}" readonly={abono.id > 0}>                        
                            </div>
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.transferencia")} </label>
                                <input type="text" class="form-control transferencia" id="transferencia" name="transferencia" value="{abono.transferencia}" readonly={abono.id > 0}>                        
                            </div>
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("cuentaCobrar.totalSaldo")} </label>
                                <input  type="number" step="any" class="form-control"  value="{cuentaCobrar.totalSaldo}" readonly={abono.id > 0}>                        
                            </div>
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.totalEfectivo")}</span> </label>
                                <input  type="number" step="any" id="totalEfectivo" name="totalEfectivo" onkeyup = {__TotalEfectivo}  class="form-control totalEfectivo"   value="{abono.totalEfectivo}" readonly={abono.id > 0}>                        
                            </div>
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.totalTarjeta")}</span> </label>
                                <input  type="number" step="any" class="form-control totalTarjeta"  id="totalTarjeta" name="totalTarjeta" onkeyup = {__TotalTarjeta} value="{abono.totalTarjeta}" readonly={abono.id > 0}>                        
                            </div>
                        </div>    
                        <div class="row">    
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.totalBanco")}</span> </label>
                                <input  type="number" step="any" class="form-control totalBanco"  id="totalBanco" name="totalBanco" onkeyup = {__TotalBanco}  value="{abono.totalBanco}" readonly={abono.id > 0}>                        
                            </div>
                            <div class="col-md-4 col-sx-4 col-sm-4 col-lg-4">
                                <label class="knob-label">{$.i18n.prop("abono.total")} <span class="requeridoDato">*</span> </label>
                                <input  type="number" step="any" class="form-control total" id="total" name="total"  value="{abono.total}"   readonly={abono.id > 0}>                        
                            </div>
                        </div>
                        <div class="row">
                            <div class= "col-md-12 col-sx-12 col-sm-12 col-lg-12">
                                <label class="knob-label" >{$.i18n.prop("abono.nota")} <span class="requeridoDato">*</span></label>
                                <input type="textArea" class="form-control nota" id="nota" name="nota" value="{abono.nota}"  readonly={abono.id > 0}>
                            </div>
                        </div>
                        <br>
                      

                    </form>    
                </div>
                <div class="box-footer">
                    <button onclick ={__regresarAlListadoAbono}  type="button" class="btn-dark-gray btn-back pull-left"  id= "btnCancelarEmpresa" name = "btnCancelarEmpresa">
                        {$.i18n.prop("btn.volver")}</buuton>
                    </button> <button show={botonAgregar} onclick={__agregarAbono}   class="btn-green btn-add pull-right" >&nbsp {$.i18n.prop("btn.agregar")}</button>
                  
                </div>
            </div>   
        </div>
    </div>
</div>
<!-- Fin Formulario -->   





    <!-- Listado  -->
    <div classs="contenedor-listar container" id="container"  show={mostrarListado}  >
        <div class="row">
            <div class="col-sx-12  col-lg-12  col-md-12 col-sm-12 " style="width:98.50%;">
                    <table id="tableListar" class="display table responsive table-hover nowrap table-condensed tableListar"   cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.id")}         </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.cliente")}    </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.vendedor")}   </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.factura")}    </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.tipo")}       </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.total")}      </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.totalAbono")} </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.totalSaldo")} </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("cuentaCobrar.estado")}     </th>
                                <th class = "fondoEncabezado">{$.i18n.prop("listado.acciones")}        </th>
                            </tr>
                        </thead>
                        <tfoot style="display: table-header-group;">
                            <tr>
                                <th>{$.i18n.prop("cuentaCobrar.id")}         </th>
                                <th>{$.i18n.prop("cuentaCobrar.cliente")}    </th>
                                <th>{$.i18n.prop("cuentaCobrar.vendedor")}   </th>
                                <th>{$.i18n.prop("cuentaCobrar.factura")}    </th>
                                <th>{$.i18n.prop("cuentaCobrar.tipo")}       </th>
                                <th>{$.i18n.prop("cuentaCobrar.total")}      </th>
                                <th>{$.i18n.prop("cuentaCobrar.totalAbono")} </th>
                                <th>{$.i18n.prop("cuentaCobrar.totalSaldo")} </th>
                                <th>{$.i18n.prop("cuentaCobrar.estado")}     </th>
                                <th>                                         </th>
                            </tr>
                        </tfoot>
                    </table>
            </div>
        </div>    
    </div>
<!-- Fin del Listado -->

<div class="row center " show ={mostrarFormulario} >
    <div class="col-md-2 col-lg-2 col-sm-2"></div>
        <div class="col-md-8 col-lg-8 col-sx-12 col-sm-8">
            <div class="box box-solid box-primary">
                <div class="box-header with-border">
                    <h1 class="box-title"><i class="fa fa-edit"></i>&nbsp {cuentaCobrar.id > 0 ? $.i18n.prop("titulo.modificar.cuentaCobrar")   :$.i18n.prop("titulo.agregar.cuentaCobrar")}     </h1>
                </div>
                <div class="box-body">
                    <form id = "formulario" name ="formulario "   class="advanced-search-form">
                        <input type="hidden" name="id" id="id" value="{cuentaCobrar.id}">
                        <input type="hidden" name="sucursal" id="sucursal" value="{cuentaCobrar.sucursal.id}">
                        <div class="row">
                            <div class="col-md-12 col-sx-12 col-sm-12 col-lg-12 left">
                                <label class="campos-requeridos-label">{$.i18n.prop("mensaje.campos.obligatorios")} </label>
                            </div>
                        </div>
                       
                        <div class="row">    
                            <div class= "col-md-3 col-sx-12 col-sm-12 col-lg-12" >
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.cliente")}  <span class="requeridoDato">*</span></label>
                                <select  class="form-control" id="cliente" name="cliente" >
                                    <option  each={clientes.data}  value="{id}" selected="{cuentaCobrar.cliente.id ==id?true:false}" >{nombreCompleto}</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">    
                            <div class= "col-md-3 col-sx-12 col-sm-12 col-lg-12">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.vendedor")}  <span class="requeridoDato">*</span></label>
                                <select  class="form-control" id="vendedor" name="vendedor"  >
                                    <option  each={vendedores.data}  value="{id}" selected="{cuentaCobrar.vendedor.id ==id?true:false}" >{nombreCompleto}</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">    
                            <div class= "col-md-3 col-sx-3 col-sm-3 col-lg-3">
                                    <label class="knob-label" >{$.i18n.prop("cuentaCobrar.fechaEntrega")} <span class="requeridoDato">*</span></label>
                                    <div  class="form-group input-group date" data-provide="datepicker"   data-date-format="dd/mm/yyyy">
                                        <input type="text" class="form-control fechaEntrega" id="fechaEntrega"  name= "fechaEntrega" value="{cuentaCobrar.fechaEntrega}"  disabled="{cuenta.estado == 'Cerrada'}">
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                            </div>
                            <div class= "col-md-3 col-sx-3 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.fechaPlazo")} <span class="requeridoDato">*</span></label>
                                <div  class="form-group input-group date" data-provide="datepicker"  data-date-start-date="0d" data-date-format="dd/mm/yyyy">
                                    <input type="text" class="form-control" id="fechaPlazo" name="fechaPlazo"  value="{cuentaCobrar.fechaPlazo}" disabled="{cuenta.estado == 'Cerrada'}">
                                    <div class="input-group-addon">
                                        <span class="glyphicon glyphicon-th"></span>
                                    </div>
                                </div>
                            </div>                            
                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.recibo")}  </label>
                                <input type="text" class="form-control recibo" id="recibo" name="recibo" value="{cuentaCobrar.recibo}"  >
                            </div>

                        </div>
                        <div class="row">

                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.letraCambio")} <span class="requeridoDato">*</span></label>
                                <input type="text" class="form-control letraCambio" id="letraCambio" name="letraCambio" value="{cuentaCobrar.letraCambio}"  readonly={cuentaCobrar.id > 0?true:false}>
                            </div>

                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.facturaManual")} </label>
                                <input type="text" class="form-control facturaManual" id="facturaManual" name="facturaManual" value="{cuentaCobrar.facturaManual}" readonly={cuentaCobrar.id > 0?true:false} >
                            </div>
                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.totalComision")} </label>
                                <input type="text" class="form-control totalComision" id="totalComision" name="totalComision" value="{cuentaCobrar.totalComision}"  >
                            </div>

                        </div>

                        <div class="row">    
                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.descuento")} </label>
                                <input type="text" class="form-control descuento" id="descuento" name="descuento" value="{cuentaCobrar.descuento}"  >

                            </div>

                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.cantidadPagos")}  <span class="requeridoDato">*</span></label>
                                <input type="text" onkeyup= {__MontoCuota} class="form-control cantidadPagos" id="cantidadPagos" name="cantidadPagos" value="{cuentaCobrar.cantidadPagos}"  >
                            </div>

                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.montoCouta")}  <span class="requeridoDato">*</span></label>
                                <input type="text"  class="form-control montoCouta" id="montoCouta" name="montoCouta" value="{cuentaCobrar.montoCouta}"  >
                            </div>

                            <div class= "col-md-3 col-sx-12 col-sm-3 col-lg-3">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.total")}  <span class="requeridoDato">*</span></label>
                                <input type="text" onkeyup= {__MontoCuota} class="form-control total_cuentaCobrar" id="total" name="total" value="{cuentaCobrar.total}"  readonly={cuentaCobrar.id > 0?true:false}>
                            </div>

                        </div>
                        <div class="row">    
                            <div class= "col-md-3 col-sx-12 col-sm-12 col-lg-12">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.descripcionArticulo")}  <span class="requeridoDato">*</span></label>
                                <input type="text" class="form-control descripcionArticulo" id="descripcionArticulo" name="descripcionArticulo" value="{cuentaCobrar.descripcionArticulo}"  >
                            </div>
                        </div>
                        <div class="row">    
                            <div class= "col-md-3 col-sx-12 col-sm-12 col-lg-12">
                                <label class="knob-label" >{$.i18n.prop("cuentaCobrar.nota")}</label>
                                <input type="text" class="form-control nota" id="nota" name="nota" value="{cuentaCobrar.nota}"  >
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 col-sx-12 col-sm-6 col-lg-6">
                                <label class="knob-label">{$.i18n.prop("sucursal.estado")}  <span class="requeridoDato">*</span></label>
                                <select  class="form-control" id="estado" name="estado" >
                                    <option  each={estados}  value="{codigo}" selected="{cuentaCobrar.estado ==codigo?true:false}" >{descripcion}</option>
                                </select>
                            </div>
                        </div>

                    </form>    
                </div>
                <div class="box-footer">
                    <button onclick ={__regresarAlListado}  type="button" class="btn-dark-gray btn-back pull-left"  id= "btnCancelarEmpresa" name = "btnCancelarEmpresa">
                        {$.i18n.prop("btn.volver")}
                    </button>
                     <button  onclick={__Modificar} show={botonModificar}  class="btn-green btn-edit pull-right" > &nbsp {$.i18n.prop("btn.modificar")}</button>
                     <button show = {botonAgregar}   onclick={__agregar}   class="btn-green btn-add pull-right" >&nbsp {$.i18n.prop("btn.agregar")}</button>
                  
                </div>
            </div>   
        </div>
        <div class="col-md-2 col-lg-2 col-sm-2"></div>
    </div>



<style type ="text/css">
        .fondoEncabezado {
            background: #00539B;
            color: #f9fafc;
        }
        .requeridoDato {
                color: red;
                text-align: left;
                font-weight: 500;
                font-size: 13px;
        }
        .fondoFacturacion {
            background: rgb(247, 244, 244);
            color: #f9fafc;
            border-style: solid;
            border-width: 5px;cliente
        }
        .wrap{
            max-width:1100px;
            width:100%;
        }
        body {
            overflow: hidden;
            background:white;
            font-size: 12px !important;
        }
        .contenedor-listar{
            width:100%;
        }
        .input-table-search{
            margin-left: 15px;
            margin-right: 15px;
            width:100%;
        }
        .botonConsulta{
            margin-top:28px;
        }
        
        table td{ 
            text-align: center;
            font-size: 12px;
            
                }
        table th {
                text-align: center;
                font-size: 12px;
        }
        th, td {
            white-space: nowrap;
        }

</style>

<script>
    var self = this
    self.idiomaDataTable           = []         // idioma de la datatable nuevo
    self.formato_tabla             = []         // Formato del Listado de la Tabla 
    self.estados                   =[]
    self.vendedores                = {data:[]}
    self.clientes                  = {data:[]}
    self.mostrarListado            = true 
    self.botonModificar            = false
    self.botonAgregar              = false
    self.mostrarListadoAbonos      = false
    self.mostrarCrearAbono         = false
    self.cuentaCobrar                   ={
        id:0,
        recibo:"",
        letraCambio:"",
        factura:"",
        facturaManual:"",
        totalComision:0,
        descuento:0,
        cantidadPagos:0,
        montoCouta:0,
        total:0,
        totalAbono:0,
        totalSaldo:0,
        descripcionArticulo:"",
        nota:"",
        tipo:"",
        estado:"",
        fechaPlazo:null,
        fechaEntrega:null,
        cliente:{
            id:0
        },
         vendedor:{
            id:0
        }
    }
    self.abono ={
	   id:0,
       nota:"",
       recibo:"",
       transferencia:"",
       fechaPago:null,
       totalEfectivo:0,
       totalTarjeta:0,
	   totalBanco:0,
       total:0,
       estado:"",
	   cuentaCobrar:{
           id:0
       }
    }


    self.on('mount',function(){
        $("#formulario").validate(reglasDeValidacion());
        $("#formularioAbono").validate(reglasDeValidacionAbono());
        __InicializarTabla('.tableListar')
        __InicializarTabla  ('.tableListaAbonos')
        includeActionsCuenta('.dataTables_wrapper','.dataTables_length')
        __listado()
        agregarInputsCombos();
         __MantenimientoAgregar()
        listaClientesActivos() 
        listaVendedoresActivos()
        __Eventos()
        

        window.addEventListener( "keydown", function(evento){
                $(".errorServerSideJgrid").remove();
            }, false );

    })

/**
* Camps requeridos
**/
var reglasDeValidacion = function() {
	var validationOptions = $.extend({}, formValidationDefaults, {
		rules : {
			recibo : {
                maxlength:25,
                minlength:1,
			},
            letraCambio : {
                required : true,
                maxlength:25,
                minlength:1,
			},
            facturaManual : {
                numeroMayorCero:true,
                maxlength:11,
                minlength:1,
			},
            total: {
                numeroMayorCero:true,
                required : true,
			},
            totalComision : {
                numeroMayorCero:true,
			},
            descuento : {
                maxlength:8,
			},
            cantidadPagos : {
                numeroMayorCero:true,
                required : true,
			},
            montoCouta : {
                required : true,
                numeroMayorCero:true,
			},
            descripcionArticulo : {
                required : true,
                maxlength:255,
                minlength:1,
			},
            nota : {
                maxlength:255,
                minlength:1,
			},
            fechaEntrega : {
                required : true,
			},
            fechaPlazo : {
                required : true,
			},


		},
		ignore : []

	});
	return validationOptions;
};


/**
*  Reglas de validacion para el abono
**/

var reglasDeValidacionAbono = function() {
	var validationOptions = $.extend({}, formValidationDefaults, {
		rules : {
			recibo : {
                required : true,
                maxlength:25,
                minlength:1,
			},
            total: {
                numeroMayorCero:true,
                required : true,
			},
            totalEfectivo: {
                number:true,
                required : true,
			},            
            totalTarjeta: {
                number:true,
                required : true,
			},            
            totalBanco: {
                number:true,
                required : true,
			},            

            nota : {
                maxlength:255,
                minlength:1,
			},
            fechaPago : {
                required : true,
			}

		},
		ignore : []

	});
	return validationOptions;
};


/**
*  Suma del monto de tarjeta
**/
__TotalTarjeta(e){
    self.abono.totalTarjeta = __valorNumerico(e.target.value) 
    self.abono.total = self.abono.totalBanco + self.abono.totalEfectivo + self.abono.totalTarjeta
    self.update()
}

/**
* Suma del monto de Efectivo
**/
__TotalEfectivo(e){
    self.abono.totalEfectivo = __valorNumerico(e.target.value) 
    self.abono.total = self.abono.totalBanco  + self.abono.totalEfectivo + self.abono.totalTarjeta
    self.update()
}

/**
* Suma del monto de cheque
**/
__TotalBanco(e){
    self.abono.totalBanco = __valorNumerico(e.target.value) 
    self.abono.total = self.abono.totalBanco  + self.abono.totalEfectivo + self.abono.totalTarjeta
    self.update()
}

/**
* Regresar al listado de los abonos 
**/
__regresarAlListadoAbono(){
    swal({
        title: "", 
        text: $.i18n.prop("mensaje.alert.regresar.listado"), 
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: '#00539B',
        cancelButtonColor: '#d33',
        confirmButtonText:$.i18n.prop("confirmacion.si"),
        cancelButtonText: $.i18n.prop("confirmacion.no"),
        confirmButtonClass: 'btn btn-success',
        cancelButtonClass: 'btn btn-danger'
        }).then(function (isConfirm) {
            if(isConfirm){
                self.mostrarListado       = false
                self.botonAgregar         = false
                self.botonModificar       = false   
                self.mostrarFormulario    = false 
                self.mostrarListadoAbonos = true
                self.mostrarCrearAbono    = false
                self.update()
                listaAbonosPorCuentaPorCobrar()
                

            }
    });    
    
}

/**
*  Regresar al listado
**/
__regresarAlListado(){
    swal({
        title: "", 
        text: $.i18n.prop("mensaje.alert.regresar.listado"), 
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: '#00539B',
        cancelButtonColor: '#d33',
        confirmButtonText:$.i18n.prop("confirmacion.si"),
        cancelButtonText: $.i18n.prop("confirmacion.no"),
        confirmButtonClass: 'btn btn-success',
        cancelButtonClass: 'btn btn-danger'
        }).then(function (isConfirm) {
            if(isConfirm){
                self.mostrarListado       = true
                self.botonAgregar         = false
                self.botonModificar       = false   
                self.mostrarFormulario    = false 
                self.mostrarListadoAbonos = false
                self.mostrarCrearAbono    = false
                self.update()
                __listado();

            }
    });    
}

/**
* Calculo del monto de la cuota con base al total a pagar
**/
__MontoCuota(e){
    self.cuentaCobrar.total = __valorNumerico($('.total_cuentaCobrar').val()) 
    if(__valorNumerico($('.cantidadPagos').val())==0){
        return
    }
    self.cuentaCobrar.montoCouta =self.cuentaCobrar.total / __valorNumerico($('.cantidadPagos').val())
    self.update()


}

/**
*   Agregar 
**/
__agregar(){
    __agregarRegistro("#formulario",$.i18n.prop("cuentaCobrar.mensaje.alert.agregar"),'AgregarCuentaCobrarManualAjax.do','ListarCuentaCobrarAjax.do','#tableListar')
}

/**
** Modificar la Empresa
**/

__Modificar(){
    self.error = false;
    self.exito = false;
    self.update();
    __modificarRegistro("#formulario",$.i18n.prop("cuentaCobrar.mensaje.alert.modificar"),'ModificarCuentaCobrarjax.do','ListarCuentaCobrarAjax.do','#tableListar')
}


/**
*   Agregar 
**/
__agregarAbono(){
    __agregarRegistro("#formularioAbono",$.i18n.prop("abono.mensaje.alert.agregar"),'AgregarAbonoAjax.do','ListarAbonosPorCuentaCobrarAjax.do','#tableListaAbonos')
}





/**
*  Activar Eventos
**/

function __Eventos(){
    $("#formulario").validate(reglasDeValidacion());
    $("#recibo").attr("maxlength", 25);
    $("#letraCambio").attr("maxlength", 25);
    $("#descripcionArticulo").attr("maxlength", 255);
    $("#nota").attr("maxlength", 255);


    $('#descuento').mask('000', {
		'translation' : {
			0 : {
				pattern : /[0-9]/
			}
		}
	});
    

}

function __Eventos_Abonos(){
    $("#formularioAbono").validate(reglasDeValidacionAbono());
    $("#recibo").attr("maxlength", 25);
    $("#nota").attr("maxlength", 255);


    $('#descuento').mask('000', {
		'translation' : {
			0 : {
				pattern : /[0-9]/
			}
		}
	});
    

}
/**
*  Crear el combo de estados
**/
function __ComboEstadosCuentaCobrarPendiente(){
    self.estados =[]
    self.estados.push({
        codigo: "Pendiente",
        descripcion:$.i18n.prop("cuentaCobrar.estado.pendiente")
     });
     self.update();

}




/**
*  Mostrar listado cuentas por cobrar
**/
function __listado(){
    $("#tableListar").dataTable().fnClearTable(); 
    $.ajax({
        url: "ListarCuentaCobrarAjax.do",
        datatype: "json",
        method:"GET",
        success: function (result) {
             if(result.aaData.length > 0){
                __InformacionDataTable();
                loadListar(".tableListar",idioma_espanol,self.informacion_tabla,result.aaData)
                includeActionsCuenta('.dataTables_wrapper','.dataTables_length')
                
                agregarInputsCombos();
                    //Activar filtros
                ActivarEventoFiltro(".tableListar")
                 __MantenimientoAgregar()
                 __modificarRegistro_Listar()
                 __mostrarListadoAbonos()
                 __MantenimientoAgregarAbono()
             } 
        },
        error: function (xhr, status) {
            mensajeErrorServidor(xhr, status);
            console.log(xhr);
        }
    })
}

/**
*  Obtiene la lista de los clientes activos
**/
function listaClientesActivos(){
    self.clientes                  = {data:[]}
    self.update()
    $.ajax({
        url: "ListarClientesActivosAjax.do",
        datatype: "json",
        method:"GET",
        success: function (result) {
             if(result.aaData.length > 0){
                 self.clientes.data = result.aaData
                 self.update()
             } 
        },
        error: function (xhr, status) {
            mensajeErrorServidor(xhr, status);
            console.log(xhr);
        }
    })
    

}
                 
/**
*  Lista de vendedores activos
**/
function listaVendedoresActivos(){
    self.vendedores                = {data:[]}
    self.update()
    $.ajax({
        url: "ListarVendedoresActivosAjax.do",
        datatype: "json",
        method:"GET",
        success: function (result) {
             if(result.aaData.length > 0){
                 self.vendedores.data = result.aaData
                 self.update()
             } 
        },
        error: function (xhr, status) {
            mensajeErrorServidor(xhr, status);
            console.log(xhr);
        }
    })
    

}



/**
*Formato del listado de los cambios
**/
function __InformacionDataTable(){
    self.informacion_tabla = [ 
                            {'data' :'id'                     ,"name":"id"                      ,"title" : $.i18n.prop("cuentaCobrar.id")           ,"autoWidth" :true },
                            {'data' :'cliente.nombreCompleto' ,"name":"cliente.nombreCompleto"  ,"title" : $.i18n.prop("cuentaCobrar.cliente")      ,"autoWidth" :false },
                            {'data' :'vendedor.nombreCompleto',"name":"vendedor.nombreCompleto" ,"title" : $.i18n.prop("cuentaCobrar.vendedor")     ,"autoWidth" :false },
                            {'data' :'factura'                ,"name":"factura"                 ,"title" : $.i18n.prop("cuentaCobrar.factura")      ,"autoWidth" :false },
                            {'data' :'tipo'                   ,"name":"tipo"                    ,"title" : $.i18n.prop("cuentaCobrar.tipo")         ,"autoWidth" :false },
                            {'data' : 'total'                 ,"name":"total"                   ,"title" : $.i18n.prop("cuentaCobrar.total")        ,"autoWidth" :false},
                            {'data' : 'totalAbono'            ,"name":"totalAbono"              ,"title" : $.i18n.prop("cuentaCobrar.totalAbono")   ,"autoWidth" :false},
                            {'data' : 'totalSaldo'            ,"name":"totalSaldo"              ,"title" : $.i18n.prop("cuentaCobrar.totalSaldo")   ,"autoWidth" :false},
                            {'data' : 'estado'                ,"name":"estado"                  ,"title" : $.i18n.prop("cuentaCobrar.estado")       ,"autoWidth" :false},
                            {'data' : 'id'                    ,"name":"id" ,"bSortable" : false, "bSearchable" : false, "autoWidth" : true,
                                "render":function(id,type, row){
                                      return __Opciones(id,type,row);
                                 }
	      		            }];
    self.update();
   
}

                                    
/**
* Opciones listado de los clientes
*/
function __Opciones(){
  var modificar  = '<a href="#"  title="Modificar" class="btn btn-warning  btn-edit btnModificar" role="button"> </a>';
  var abono   = '<a href="#"  title="Ver/Crear abonos" class="btn btn-success btnlistdoAbono"  role="button"><i class="fa fa-bank"></i></a>';
  return  modificar +" " + abono;
}


/**
*  Mostrar listado de abonos
**/
function __mostrarListadoAbonos(){
    $('.tableListar').on('click','.btnlistdoAbono',function(e){
        var table = $('.tableListar').DataTable();
		if(table.row(this).child.isShown()){
			//cuando el datatable esta en modo responsive
	       var data = table.row(this).data();
	    }else{	
	       var data = table.row($(this).parents("tr")).data();
	    }
         $(".tableListaAbonos").dataTable().fnClearTable()
         includeActionsAbono('.dataTables_wrapper','.dataTables_length')
        self.cuentaCobrar                   ={
                id:0,
                recibo:"",
                letraCambio:"",
                factura:"",
                facturaManual:"",
                totalComision:0,
                descuento:0,
                cantidadPagos:0,
                montoCouta:0,
                total:0,
                totalAbono:0,
                totalSaldo:0,
                descripcionArticulo:"",
                nota:"",
                tipo:"",
                estado:"",
                fechaPlazo:null,
                fechaEntrega:null,
                cliente:{
                    id:0
                },
                vendedor:{
                    id:0
                }
            }
        self.cuentaCobrar = data    
        self.error                     = false
        self.errors                    = [];
        self.modificar                 = false
        self.agregar                   = false 
        self.mostrarFormulario         = false
        self.mostrarListado            = false 
        self.mostrarListadoAbonos      = true
        self.mostrarCrearAbono         = false
        self.update()
        
        listaAbonosPorCuentaPorCobrar()

    
    })
}

/**
* incluir el boton agregar en cada mantenimiento 
**/
function includeActionsCuenta(dataTables_wrapper,dataTables_length) {
    $( ".btn-agregar" ).remove();
     $( ".btn-agregarAbono" ).remove();
    var parent = $(dataTables_wrapper);
    var header_pointer = $(dataTables_length);
    var header_length = header_pointer.html();
    console.log(header_length)
//    header_pointer.remove();
    var new_header = "<div  class='new-header-with-actions' style='padding-top:0px; padding-bottom:0px;'>";
    //new_header += header_length;
   
    new_header += "<div class='add-new btn-agregar' ><i class='fa fa-plus'></i> Agregar</div>";
    new_header += "</div>";
    parent.prepend(new_header);
    
    
}

function includeActionsAbono(dataTables_wrapper,dataTables_length) {
    $( ".btn-agregarAbono" ).remove();
    $( ".btn-agregar" ).remove();
    var parent = $(dataTables_wrapper);
    var header_pointer = $(dataTables_length);
    var header_length = header_pointer.html();
    console.log(header_length)
//    header_pointer.remove();
    var new_header = "<div  class='new-header-with-actions' style='padding-top:0px; padding-bottom:0px;'>";
    //new_header += header_length;
   
    new_header += "<div class='add-new btn-agregarAbono' ><i class='fa fa-plus'></i> Agregar</div>";
    new_header += "</div>";
    parent.prepend(new_header);
    
    
}




/**
 * Funcion para Modificar del Listar
 */
function __modificarRegistro_Listar(){
	$('#tableListar').on('click','.btnModificar',function(e){
        $("#formulario").validate(reglasDeValidacion());
        $(".errorServerSideJgrid").remove();
		var table = $('#tableListar').DataTable();
		if(table.row(this).child.isShown()){
			//cuando el datatable esta en modo responsive
	       var data = table.row(this).data();
	    }else{	
	       var data = table.row($(this).parents("tr")).data();
	    }
        self.cuentaCobrar                   ={
                id:0,
                recibo:"",
                letraCambio:"",
                factura:"",
                facturaManual:"",
                totalComision:0,
                descuento:0,
                cantidadPagos:0,
                montoCouta:0,
                total:0,
                totalAbono:0,
                totalSaldo:0,
                descripcionArticulo:"",
                nota:"",
                tipo:"",
                estado:"",
                fechaPlazo:null,
                fechaEntrega:null,
                cliente:{
                    id:0
                },
                vendedor:{
                    id:0
                }
         }
        
          
        self.cuentaCobrar = data
        self.update()
        __consultar()
	});
}

function __consultar(){
      
    var formulario = $('#formulario').serialize();
    $.ajax({
        url: "MostrarCuentaCobrarAjax.do",
        datatype: "json",
        data: formulario,
        method:"GET",
        success: function (data) {
            if (data.status != 200) {
                if (data.message != null && data.message.length > 0) {
                    sweetAlert("", data.message, "error");
                }
            }else{
                if (data.message != null && data.message.length > 0) {
                    $.each(data.listaObjetos, function( index, modeloTabla ) {
                        //Inicializar el Formulario
                        $(".errorServerSideJgrid").remove();
                        $("#formulario").validate(reglasDeValidacion());
                        //desahabilita  listado 
                        self.mostrarListado   = false;
                        self.mostrarFormulario  = true 
                        //desahabilita boton modificar
                        self.botonModificar   = true;
                        // habilita el formulario
                        self.botonAgregar = false;
                        self.cuentaCobrar  =  modeloTabla
                        self.cuentaCobrar.fechaPlazo = __displayDate_detail(self.cuentaCobrar.fechaPlazo)
                        self.cuentaCobrar.fechaEntrega = __displayDate_detail(self.cuentaCobrar.fechaEntrega)
                        self.update()
                        __ComboEstadosCuentaCobrarModificar()
                    });
                }
            }
            
        },
        error: function (xhr, status) {
            mensajeErrorServidor(xhr, status);
            console.log(xhr);
        }
    });
}

/**
*Formato de la fecha con hora
**/
function __displayDate_detail(fecha) {
      var dateTime = new Date(fecha);
      return moment(dateTime).format('DD/MM/YYYY ');
}


/**
*  Crear el combo de estados
**/
function __ComboEstadosCuentaCobrarModificar(){
    self.estados =[]
    self.estados.push({
        codigo: "Pendiente",
        descripcion:$.i18n.prop("cuentaCobrar.estado.pendiente")
     });
    self.estados.push({
        codigo: "Cerrada",
        descripcion:$.i18n.prop("cuentaCobrar.estado.cerrada")
     });
    self.estados.push({
        codigo: "Anulada",
        descripcion:$.i18n.prop("cuentaCobrar.estado.anulada")
     });

     self.update();

}



// Mostrar formulario de mantenimiento Agregar cuentas por cobrar
function __MantenimientoAgregar(){
      //Inicializar el Formulario
    $('.dataTables_wrapper').on('click','.btn-agregar',function(e){
        //desahabilita  listado 
        self.mostrarListado   = false;
        self.mostrarFormulario  = true 
        //desahabilita boton modificar
        self.botonModificar   = false;
        // habilita el formulario
        self.botonAgregar     = true;
       self.cuentaCobrar                   ={
        id:0,
        recibo:"",
        letraCambio:"",
        factura:"",
        facturaManual:"",
        totalComision:0,
        descuento:0,
        cantidadPagos:0,
        montoCouta:0,
        total:0,
        totalAbono:0,
        totalSaldo:0,
        descripcionArticulo:"",
        nota:"",
        tipo:"",
        estado:"",
        fechaPlazo:null,
        fechaEntrega:null,
        cliente:{
            id:0
        },
         vendedor:{
            id:0
        }
    }

        self.update();
        //Inicializar el Formulario
        $(".errorServerSideJgrid").remove();
        $("#formulario").validate(reglasDeValidacion());
        __ComboEstadosCuentaCobrarPendiente()
   
    })
}


/**  Funciones de los abonos de la cuenta por cobrar**/

function listaAbonosPorCuentaPorCobrar(){
    var parametros = {idCuentaCobrar:self.cuentaCobrar.id}
    $.ajax({
        url: "ListarAbonosPorCuentaCobrarAjax.do",
        datatype: "json",
        method:"GET",
        data:parametros,
        success: function (result) {
             if(result.aaData.length > 0){
                __InformacionTabla_lista_Abonos();
                loadListar(".tableListaAbonos",idioma_espanol,self.informacion_tabla_abonos,result.aaData)
                includeActionsAbono('.dataTables_wrapper','.dataTables_length')
                
                agregarInputsCombosAbonos();
                    //Activar filtros
                ActivarEventoFiltro(".tableListaAbonos")
                __MantenimientoAgregarAbono()
                __verAbono()
                __Anular()
             
             } 
        },
        error: function (xhr, status) {
            mensajeErrorServidor(xhr, status);
            console.log(xhr);
        }
    })
}

/**
*  Informacion de la lista de los abonos
**/
function __InformacionTabla_lista_Abonos(){
    self.informacion_tabla_abonos  = [ 
                                       {'data':  'id'             ,"name":"id"            ,"title" : $.i18n.prop("abono.id")},
                                       {'data' : 'fechaPago'      ,"name":"fechaPago"     ,"title" : $.i18n.prop("abono.fechaPago"),
									     "render":function(fechaPago,type, row){
										        return __displayDate_detail(fechaPago);
	 							             }
                                       },
                                       {'data' : 'transferencia'  ,"name":"transferencia" ,"title" : $.i18n.prop("abono.transferencia")},
                                       {'data' : 'recibo'         ,"name":"recibo"        ,"title" : $.i18n.prop("abono.recibo")},
                                       {'data' : 'total'          ,"name":"total"         ,"title" : $.i18n.prop("abono.total")},
                                       {'data' : 'estado'         ,"name":"estado"        ,"title" : $.i18n.prop("abono.estado")},
                                       {'data' : 'created_at'     ,"name":"created_at"    ,"title" : $.i18n.prop("abono.created_at"),
									     "render":function(created_at,type, row){
										        return formatoFechaHora(created_at);
	 							             }
                                       },
                                       {'data' : 'updated_at'     ,"name":"updated_at"    ,"title" : $.i18n.prop("abono.updated_at") ,
									     "render":function(updated_at,type, row){
										        return formatoFechaHora(updated_at);
	 							             }
                                       },
                                       {"bSortable" : false, "bSearchable" : false, 'data' : 'id',"name" : "id",
									     "render":function(id,type, row){
										        return __OpcionesAbonos(id,type,row);
	 							             }
							        }];
    self.update();
}
/**
* Opciones listado de los Abonos
*/
function __OpcionesAbonos(id,type,row){
  var verAbono  = '<a href="#"  title="Ver abonos" class="btn btn-success verAbono"  role="button"><i class="fa fa-search-plus"></i></a>';
  var anular  = '<a href="#"  title="Anular abono" class="btn btn-danger anularAbono"  role="button"><i class="fa fa-trash"></i></a>';
  
  anular = row.estado =="Anulado"?"":anular
  
  return  verAbono + " " + anular;
}


/**
 * mostrar la abono
 */
function __verAbono(){
	$('#tableListaAbonos').on('click','.verAbono',function(e){
        $("#formularioAbono").validate(reglasDeValidacion());
        $(".errorServerSideJgrid").remove();
		var table = $('#tableListaAbonos').DataTable();
		if(table.row(this).child.isShown()){
			//cuando el datatable esta en modo responsive
	       var data = table.row(this).data();
	    }else{	
	       var data = table.row($(this).parents("tr")).data();
	    }
          
        self.abono = data
        self.update()
        consultaAbono()
	});
}

function consultaAbono(){
     var formulario = $('#formularioAbono').serialize();
    $.ajax({
        url: "MostrarAbonoAjax.do",
        datatype: "json",
        data: formulario,
        method:"GET",
        success: function (data) {
            if (data.status != 200) {
                if (data.message != null && data.message.length > 0) {
                    sweetAlert("", data.message, "error");
                }
            }else{
                if (data.message != null && data.message.length > 0) {
                    $.each(data.listaObjetos, function( index, modeloTabla ) {
                        //Inicializar el Formulario
                        $(".errorServerSideJgrid").remove();
                        $("#formularioAbono").validate(reglasDeValidacionAbono());
                        self.mostrarListado            = false
                        self.botonModificar            = false
                        self.botonAgregar              = false
                        self.mostrarListadoAbonos      = false
                        self.mostrarCrearAbono         = true
                        self.abono  =  modeloTabla
                        
                        self.update()
                        
                    });
                }
            }
            
        },
        error: function (xhr, status) {
            mensajeErrorServidor(xhr, status);
            console.log(xhr);
        }
    });
}

/**
 * mostrar la abono
 */
function __Anular(){
	$('#tableListaAbonos').on('click','.anularAbono',function(e){
        $("#formularioAbono").validate(reglasDeValidacion());
        $(".errorServerSideJgrid").remove();
		var table = $('#tableListaAbonos').DataTable();
		if(table.row(this).child.isShown()){
			//cuando el datatable esta en modo responsive
	       var data = table.row(this).data();
	    }else{	
	       var data = table.row($(this).parents("tr")).data();
	    }
          
        self.abono = data
        self.update()
        __agregarRegistro("#formularioAbono",$.i18n.prop("abono.mensaje.alert.anulada"),'anularAbonoAjax.do','ListarAbonosPorCuentaCobrarAjax.do','#tableListaAbonos')
        listaAbonosPorCuentaPorCobrar()
	});
}


// Mostrar formulario de mantenimiento Agregar
function __MantenimientoAgregarAbono(){
      //Inicializar el Formulario
    $('.dataTables_wrapper').on('click','.btn-agregarAbono',function(e){
        self.abono ={
            id:0,
            nota:"",
            recibo:"",
            transferencia:"",
            fechaPago:null,
            totalEfectivo:0,
            totalTarjeta:0,
            totalBanco:0,
            total:0,
            estado:"",
            cuentaCobrar:{
                id:0
            }
        }
        self.mostrarListado       = false
        self.botonAgregar         = true
        self.botonModificar       = false   
        self.mostrarFormulario    = false 
        self.mostrarListadoAbonos = false
        self.mostrarCrearAbono    = true
        self.update()
        $(".errorServerSideJgrid").remove();
        $("#formularioAbono").validate(reglasDeValidacionAbono());

    })
}




/**
*  Agregar los inpust  y select de las tablas
**/
function agregarInputsCombos(){
     // Agregar los input de busqueda 
    $('.tableListar tfoot th').each( function (e) {
        var title = $('.tableListar thead th').eq($(this).index()).text();      
        //No se toma en cuenta la columna de las acctiones(botones)
        if ( $(this).index() != 8    ){
	      	$(this).html( '<input id = "filtroCampos" type="text" class="form-control"  placeholder="'+title+'" />' );
	    }
 
    })

}
/**
*  Agregar los inpust  y select de las tablas
**/
function agregarInputsCombosAbonos(){
     // Agregar los input de busqueda 
    $('.tableListaAbonos tfoot th').each( function (e) {
        var title = $('.tableListaAbonos thead th').eq($(this).index()).text();      
        //No se toma en cuenta la columna de las acctiones(botones)
        if ( $(this).index() != 8    ){
	      	$(this).html( '<input id = "filtroCampos" type="text" class="form-control"  placeholder="'+title+'" />' );
	    }
 
    })

}
/**
*  retorna el valor numerico o cero sino es numerico
**/
function __valorNumerico(valor){
    
    return isNumber(valor)?parseFloat(valor):0 ;
}

/**
*  Validar si es numero
**/
function isNumber(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}

</script>    
</cuenta-cobrar>